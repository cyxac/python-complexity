
Test Misc-1: running time should be n+2*m+7+3*n*lg(n)+17*n*m
Spec_string:  1<=n<=100000;1<=m<=100000 by factors of 10
var_list ['n', 'm']
Function list: ('(n*m)', 'n**2', 'n*lg(n)', 'n', 'm', '1')
run times:
n =      1 m =      1 : 27.000000 microseconds
n =      1 m =     10 : 198.000000 microseconds
n =      1 m =    100 : 1908.000000 microseconds
n =      1 m =   1000 : 19008.000000 microseconds
n =      1 m =  10000 : 190008.000000 microseconds
n =      1 m = 100000 : 1900008.000000 microseconds
n =     10 m =      1 : 288.657843 microseconds
n =     10 m =     10 : 1836.657843 microseconds
n =     10 m =    100 : 17316.657843 microseconds
n =     10 m =   1000 : 172116.657843 microseconds
n =     10 m =  10000 : 1720116.657843 microseconds
n =     10 m = 100000 : 17200116.657843 microseconds
n =    100 m =      1 : 3802.156857 microseconds
n =    100 m =     10 : 19120.156857 microseconds
n =    100 m =    100 : 172300.156857 microseconds
n =    100 m =   1000 : 1704100.156857 microseconds
n =    100 m =  10000 : 17022100.156857 microseconds
n =    100 m = 100000 : 170202100.156857 microseconds
n =   1000 m =      1 : 47906.352854 microseconds
n =   1000 m =     10 : 200924.352854 microseconds
n =   1000 m =    100 : 1731104.352854 microseconds
n =   1000 m =   1000 : 17032904.352854 microseconds
n =   1000 m =  10000 : 170050904.352854 microseconds
n =   1000 m = 100000 : 1700230904.352854 microseconds
n =  10000 m =      1 : 578640.371386 microseconds
n =  10000 m =     10 : 2108658.371386 microseconds
n =  10000 m =    100 : 17408838.371386 microseconds
n =  10000 m =   1000 : 170410638.371386 microseconds
n =  10000 m =  10000 : 1700428638.371387 microseconds
n =  10000 m = 100000 : 17000608638.371386 microseconds
n = 100000 m =      1 : 6782901.142331 microseconds
n = 100000 m =     10 : 22082919.142331 microseconds
n = 100000 m =    100 : 175083099.142331 microseconds
n = 100000 m =   1000 : 1705084899.142331 microseconds
n = 100000 m =  10000 : 17005102899.142330 microseconds
n = 100000 m = 100000 : 170005282899.142334 microseconds
Coefficients trained by the data:
 17*(n*m)
-4.36072e-12*n**2
+3*n*lg(n)
+1*n
+2*m
+7*1
(measuring time in microseconds)
Sum of squares of residuals: 2.01144964616e-17
RMS error = 7.5e-08 percent

Test Misc-2: pass: pass
Spec_string:  10000<=n<=1000000 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =  10000 : 0.016176 microseconds
n =  20000 : 0.015751 microseconds
n =  40000 : 0.016176 microseconds
n =  80000 : 0.015751 microseconds
n = 160000 : 0.016176 microseconds
n = 320000 : 0.016176 microseconds
n = 640000 : 0.016176 microseconds
Coefficients trained by the data:
 0.0160501*1
(measuring time in microseconds)
Sum of squares of residuals: 0.00102743244632
RMS error = 1.2 percent

Test Number-1: time to compute int('1'*n): int(x)
Spec_string:  1000<=n<=10000 by factors of 2
var_list ['n']
Function list: ('n**2',)
run times:
n =   1000 : 18.214628 microseconds
n =   2000 : 58.077111 microseconds
n =   4000 : 207.502359 microseconds
n =   8000 : 775.899376 microseconds
Coefficients trained by the data:
 1.3818e-05*n**2
(measuring time in microseconds)
Sum of squares of residuals: 0.0844207907728
RMS error = 15 percent

Test Number-2: time to compute repr(2**n): repr(x)
Spec_string:  1000<=n<=10000 by factors of 2
var_list ['n']
Function list: ('n**2',)
run times:
n =   1000 : 5.635773 microseconds
n =   2000 : 16.332631 microseconds
n =   4000 : 60.557635 microseconds
n =   8000 : 228.824559 microseconds
Coefficients trained by the data:
 4.03446e-06*n**2
(measuring time in microseconds)
Sum of squares of residuals: 0.101709834189
RMS error = 16 percent

Test Number-3 -- time to convert (2**n) to hex
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 3.193562 microseconds
n =   2000 : 3.221658 microseconds
n =   4000 : 5.806477 microseconds
n =   8000 : 10.882035 microseconds
n =  16000 : 21.191085 microseconds
n =  32000 : 40.191120 microseconds
n =  64000 : 82.305103 microseconds
Coefficients trained by the data:
 0.00141718*n
(measuring time in microseconds)
Sum of squares of residuals: 0.357947025657
RMS error = 23 percent

Test Number-4: time to add 2**n to itself: x+x
Spec_string:  1000<=n<=1000000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 0.155591 microseconds
n =   2000 : 0.279383 microseconds
n =   4000 : 0.386446 microseconds
n =   8000 : 0.673875 microseconds
n =  16000 : 0.975565 microseconds
n =  32000 : 1.830573 microseconds
n =  64000 : 3.445786 microseconds
n = 128000 : 6.975392 microseconds
n = 256000 : 13.219738 microseconds
n = 512000 : 25.855253 microseconds
Coefficients trained by the data:
 6.1666e-05*n
(measuring time in microseconds)
Sum of squares of residuals: 1.01027056183
RMS error = 32 percent

Test Number-5: time to multiply (2**n/3) by itself: x*x
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n**1.585',)
run times:
n =   1000 : 2.513728 microseconds
n =   2000 : 5.621299 microseconds
n =   4000 : 20.378434 microseconds
n =   8000 : 63.656267 microseconds
n =  16000 : 197.578989 microseconds
n =  32000 : 602.227405 microseconds
n =  64000 : 1825.238676 microseconds
Coefficients trained by the data:
 4.04397e-05*n**1.585
(measuring time in microseconds)
Sum of squares of residuals: 0.0748384412111
RMS error = 10 percent

Test Number-6: time to divide (2**(2n) by (2**n)): w/x
Spec_string:  1000<=n<=50000 by factors of 2
var_list ['n']
Function list: ('n**2',)
run times:
n =   1000 : 3.935548 microseconds
n =   2000 : 13.463874 microseconds
n =   4000 : 47.441127 microseconds
n =   8000 : 181.087999 microseconds
n =  16000 : 719.084875 microseconds
n =  32000 : 2775.755491 microseconds
Coefficients trained by the data:
 3.00588e-06*n**2
(measuring time in microseconds)
Sum of squares of residuals: 0.088095764147
RMS error = 12 percent

Test Number-7 -- time to compute remainder of (2**(2n) by (2**n))
Spec_string:  1000<=n<=50000 by factors of 2
var_list ['n']
Function list: ('n**2',)
run times:
n =   1000 : 3.981949 microseconds
n =   2000 : 13.565615 microseconds
n =   4000 : 47.160169 microseconds
n =   8000 : 182.360401 microseconds
n =  16000 : 716.446419 microseconds
n =  32000 : 2781.020058 microseconds
Coefficients trained by the data:
 3.01094e-06*n**2
(measuring time in microseconds)
Sum of squares of residuals: 0.0932899422792
RMS error = 12 percent

Test Number-8: time to compute pow(x,y,z): pow(x,y,z)
Spec_string:  1000<=n<=5000 by factors of 2
var_list ['n']
Function list: ('n**3',)
run times:
n =   1000 : 6418.285123 microseconds
n =   2000 : 38017.650156 microseconds
n =   4000 : 269822.583192 microseconds
Coefficients trained by the data:
 4.83453e-06*n**3
(measuring time in microseconds)
Sum of squares of residuals: 0.0827146204153
RMS error = 17 percent

Test Number-9: time to compute 2**n: 2**%(n)s
Spec_string:  1000<=n<=1000000 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =   1000 : 0.023115 microseconds
n =   2000 : 0.023456 microseconds
n =   4000 : 0.023456 microseconds
n =   8000 : 0.023583 microseconds
n =  16000 : 0.023073 microseconds
n =  32000 : 0.023498 microseconds
n =  64000 : 0.023115 microseconds
n = 128000 : 0.023456 microseconds
n = 256000 : 0.023073 microseconds
n = 512000 : 0.023626 microseconds
Coefficients trained by the data:
 0.0233412*1
(measuring time in microseconds)
Sum of squares of residuals: 0.000829311033313
RMS error = 0.91 percent

Test String-1: extract a byte from a string: s[500]
Spec_string:  1000<=n<=1000000 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =   1000 : 0.058746 microseconds
n =   2000 : 0.059172 microseconds
n =   4000 : 0.058746 microseconds
n =   8000 : 0.057894 microseconds
n =  16000 : 0.059172 microseconds
n =  32000 : 0.058320 microseconds
n =  64000 : 0.058320 microseconds
n = 128000 : 0.058320 microseconds
n = 256000 : 0.058320 microseconds
n = 512000 : 0.058320 microseconds
Coefficients trained by the data:
 0.0585278*1
(measuring time in microseconds)
Sum of squares of residuals: 0.00044732904033
RMS error = 0.67 percent

Test String-2: concatenate two string of length n: s+t
Spec_string:  1000<=n<=500000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 0.552978 microseconds
n =   2000 : 0.704525 microseconds
n =   4000 : 0.910561 microseconds
n =   8000 : 1.507811 microseconds
n =  16000 : 3.930014 microseconds
n =  32000 : 8.877439 microseconds
n =  64000 : 17.786804 microseconds
n = 128000 : 34.146254 microseconds
n = 256000 : 69.283526 microseconds
Coefficients trained by the data:
 0.000256311*n
(measuring time in microseconds)
Sum of squares of residuals: 0.525479529481
RMS error = 24 percent

Test String-3: extract a string of length n/2: s[0:%(n)s/2]
Spec_string:  1000<=n<=500000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 0.268188 microseconds
n =   2000 : 0.293729 microseconds
n =   4000 : 0.674726 microseconds
n =   8000 : 0.698991 microseconds
n =  16000 : 0.957388 microseconds
n =  32000 : 2.366437 microseconds
n =  64000 : 4.872928 microseconds
n = 128000 : 9.707118 microseconds
n = 256000 : 17.243192 microseconds
Coefficients trained by the data:
 7.91116e-05*n
(measuring time in microseconds)
Sum of squares of residuals: 1.14325477721
RMS error = 36 percent

Test String-4: translate a string of length n: string.translate(s,T)
Spec_string:  1000<=n<=500000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 2.351112 microseconds
n =   2000 : 4.309308 microseconds
n =   4000 : 7.793194 microseconds
n =   8000 : 14.602182 microseconds
n =  16000 : 29.404015 microseconds
n =  32000 : 55.771974 microseconds
n =  64000 : 109.244771 microseconds
n = 128000 : 214.857939 microseconds
n = 256000 : 424.419384 microseconds
Coefficients trained by the data:
 0.00183339*n
(measuring time in microseconds)
Sum of squares of residuals: 0.102121123257
RMS error = 11 percent

Test List-1: create an empty list: x = list()
Spec_string:  1<=n<=10 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =      1 : 0.176663 microseconds
n =      2 : 0.178366 microseconds
n =      4 : 0.177940 microseconds
n =      8 : 0.174109 microseconds
Coefficients trained by the data:
 0.176738*1
(measuring time in microseconds)
Sum of squares of residuals: 0.000357133369019
RMS error = 0.94 percent

Test List-2: list (array) lookup: x=L[5]
Spec_string:  10000<=n<=1000000 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =  10000 : 0.044272 microseconds
n =  20000 : 0.042995 microseconds
n =  40000 : 0.042995 microseconds
n =  80000 : 0.043421 microseconds
n = 160000 : 0.044698 microseconds
n = 320000 : 0.047252 microseconds
n = 640000 : 0.048955 microseconds
Coefficients trained by the data:
 0.0447505*1
(measuring time in microseconds)
Sum of squares of residuals: 0.0145680891401
RMS error = 4.6 percent

Test List-3: appending to a list of length n: L.append(0)
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =   1000 : 0.132391 microseconds
n =   2000 : 0.125580 microseconds
n =   4000 : 0.121749 microseconds
n =   8000 : 0.123451 microseconds
n =  16000 : 0.121323 microseconds
n =  32000 : 0.121749 microseconds
n =  64000 : 0.124729 microseconds
Coefficients trained by the data:
 0.12423*1
(measuring time in microseconds)
Sum of squares of residuals: 0.00537609291258
RMS error = 2.8 percent

Test List-4: Pop: L.pop()
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =   1000 : 0.176663 microseconds
n =   2000 : 0.170278 microseconds
n =   4000 : 0.170278 microseconds
n =   8000 : 0.170278 microseconds
n =  16000 : 0.172406 microseconds
n =  32000 : 0.170278 microseconds
n =  64000 : 0.172406 microseconds
Coefficients trained by the data:
 0.171744*1
(measuring time in microseconds)
Sum of squares of residuals: 0.00110143756934
RMS error = 1.3 percent

Test List-5: concatenating two lists: L+M
Spec_string:  1000<=n<=100000;1000<=m<=100000 by factors of 2
var_list ['n', 'm']
Function list: ('n', 'm')
run times:
n =   1000 m =   1000 : 13.771226 microseconds
n =   1000 m =   2000 : 19.594730 microseconds
n =   1000 m =   4000 : 34.355696 microseconds
n =   1000 m =   8000 : 60.280507 microseconds
n =   1000 m =  16000 : 115.799619 microseconds
n =   1000 m =  32000 : 223.881391 microseconds
n =   1000 m =  64000 : 704.156611 microseconds
n =   2000 m =   1000 : 20.707922 microseconds
n =   2000 m =   2000 : 26.297294 microseconds
n =   2000 m =   4000 : 40.292010 microseconds
n =   2000 m =   8000 : 67.617357 microseconds
n =   2000 m =  16000 : 120.192789 microseconds
n =   2000 m =  32000 : 227.965932 microseconds
n =   2000 m =  64000 : 687.986596 microseconds
n =   4000 m =   1000 : 33.006244 microseconds
n =   4000 m =   2000 : 40.315423 microseconds
n =   4000 m =   4000 : 53.128835 microseconds
n =   4000 m =   8000 : 79.257980 microseconds
n =   4000 m =  16000 : 139.280942 microseconds
n =   4000 m =  32000 : 241.428529 microseconds
n =   4000 m =  64000 : 719.626359 microseconds
n =   8000 m =   1000 : 59.301409 microseconds
n =   8000 m =   2000 : 66.080598 microseconds
n =   8000 m =   4000 : 80.933089 microseconds
n =   8000 m =   8000 : 107.200584 microseconds
n =   8000 m =  16000 : 158.805432 microseconds
n =   8000 m =  32000 : 269.964978 microseconds
n =   8000 m =  64000 : 747.811610 microseconds
n =  16000 m =   1000 : 113.100714 microseconds
n =  16000 m =   2000 : 118.992329 microseconds
n =  16000 m =   4000 : 134.943112 microseconds
n =  16000 m =   8000 : 165.650604 microseconds
n =  16000 m =  16000 : 211.595840 microseconds
n =  16000 m =  32000 : 333.008244 microseconds
n =  16000 m =  64000 : 829.596088 microseconds
n =  32000 m =   1000 : 221.150559 microseconds
n =  32000 m =   2000 : 226.137573 microseconds
n =  32000 m =   4000 : 244.823445 microseconds
n =  32000 m =   8000 : 270.384287 microseconds
n =  32000 m =  16000 : 328.359658 microseconds
n =  32000 m =  32000 : 669.066592 microseconds
n =  32000 m =  64000 : 1004.684345 microseconds
n =  64000 m =   1000 : 678.623439 microseconds
n =  64000 m =   2000 : 690.391771 microseconds
n =  64000 m =   4000 : 697.562599 microseconds
n =  64000 m =   8000 : 751.459814 microseconds
n =  64000 m =  16000 : 848.690627 microseconds
n =  64000 m =  32000 : 1007.142732 microseconds
n =  64000 m =  64000 : 1451.631922 microseconds
Coefficients trained by the data:
 0.00721602*n
+0.00729433*m
(measuring time in microseconds)
Sum of squares of residuals: 1.58905038824
RMS error = 18 percent

Test List-6: extending a length m list: L.extend(M)
Spec_string:  1000<=n<=100000;1000<=m<=100000 by factors of 2
var_list ['n', 'm']
Function list: ('m',)
run times:
n =   1000 m =   1000 : 33.666071 microseconds
n =   1000 m =   2000 : 110.176191 microseconds
n =   1000 m =   4000 : 271.786952 microseconds
n =   1000 m =   8000 : 570.469299 microseconds
n =   1000 m =  16000 : 1134.902246 microseconds
n =   1000 m =  32000 : 2311.886547 microseconds
n =   1000 m =  64000 : 4701.096292 microseconds
n =   2000 m =   1000 : 43.840175 microseconds
n =   2000 m =   2000 : 129.581487 microseconds
n =   2000 m =   4000 : 280.094385 microseconds
n =   2000 m =   8000 : 536.933065 microseconds
n =   2000 m =  16000 : 1118.415087 microseconds
n =   2000 m =  32000 : 2302.274359 microseconds
n =   2000 m =  64000 : 4622.706729 microseconds
n =   4000 m =   1000 : 40.123860 microseconds
n =   4000 m =   2000 : 134.251358 microseconds
n =   4000 m =   4000 : 285.162281 microseconds
n =   4000 m =   8000 : 556.706587 microseconds
n =   4000 m =  16000 : 1130.430322 microseconds
n =   4000 m =  32000 : 2335.902117 microseconds
n =   4000 m =  64000 : 4690.945600 microseconds
n =   8000 m =   1000 : 45.655764 microseconds
n =   8000 m =   2000 : 140.055706 microseconds
n =   8000 m =   4000 : 282.173904 microseconds
n =   8000 m =   8000 : 557.721869 microseconds
n =   8000 m =  16000 : 1133.535765 microseconds
n =   8000 m =  32000 : 2341.987424 microseconds
n =   8000 m =  64000 : 4695.019499 microseconds
n =  16000 m =   1000 : 45.472715 microseconds
n =  16000 m =   2000 : 134.883515 microseconds
n =  16000 m =   4000 : 294.035889 microseconds
n =  16000 m =   8000 : 548.539633 microseconds
n =  16000 m =  16000 : 1140.951368 microseconds
n =  16000 m =  32000 : 2333.686376 microseconds
n =  16000 m =  64000 : 4712.402745 microseconds
n =  32000 m =   1000 : 58.833145 microseconds
n =  32000 m =   2000 : 144.806460 microseconds
n =  32000 m =   4000 : 293.537826 microseconds
n =  32000 m =   8000 : 563.702880 microseconds
n =  32000 m =  16000 : 1121.993052 microseconds
n =  32000 m =  32000 : 2312.048311 microseconds
n =  32000 m =  64000 : 4776.065397 microseconds
n =  64000 m =   1000 : 75.824752 microseconds
n =  64000 m =   2000 : 152.239091 microseconds
n =  64000 m =   4000 : 283.031679 microseconds
n =  64000 m =   8000 : 560.520812 microseconds
n =  64000 m =  16000 : 1116.286613 microseconds
n =  64000 m =  32000 : 2321.173079 microseconds
n =  64000 m =  64000 : 4718.081513 microseconds
Coefficients trained by the data:
 0.0627243*m
(measuring time in microseconds)
Sum of squares of residuals: 2.18764059904
RMS error = 21 percent

Test List-7: extracting a slice of length n/2: L[0:%(n)s/2]
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 3.682260 microseconds
n =   2000 : 6.525901 microseconds
n =   4000 : 12.862367 microseconds
n =   8000 : 30.630867 microseconds
n =  16000 : 57.383654 microseconds
n =  32000 : 107.722060 microseconds
n =  64000 : 264.037178 microseconds
Coefficients trained by the data:
 0.00353191*n
(measuring time in microseconds)
Sum of squares of residuals: 0.047511643426
RMS error = 8.2 percent

Test List-8: copy: L[:]
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 7.668891 microseconds
n =   2000 : 15.744321 microseconds
n =   4000 : 26.422874 microseconds
n =   8000 : 52.913859 microseconds
n =  16000 : 111.678893 microseconds
n =  32000 : 217.180956 microseconds
n =  64000 : 680.422000 microseconds
Coefficients trained by the data:
 0.00726681*n
(measuring time in microseconds)
Sum of squares of residuals: 0.135266809003
RMS error = 14 percent

Test List-8: copy: L[:]
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 7.668891 microseconds
n =   2000 : 15.846488 microseconds
n =   4000 : 26.039749 microseconds
n =   8000 : 52.775509 microseconds
n =  16000 : 105.402024 microseconds
n =  32000 : 222.644748 microseconds
n =  64000 : 677.374025 microseconds
Coefficients trained by the data:
 0.00720336*n
(measuring time in microseconds)
Sum of squares of residuals: 0.143741361411
RMS error = 14 percent

Test List-9: assigning a slice of length n/2: L[0:%(n)s/2]=L[1:1+%(n)s/2]
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 7.251710 microseconds
n =   2000 : 12.796385 microseconds
n =   4000 : 27.925577 microseconds
n =   8000 : 53.086266 microseconds
n =  16000 : 106.889827 microseconds
n =  32000 : 211.927882 microseconds
n =  64000 : 613.875265 microseconds
Coefficients trained by the data:
 0.00695689*n
(measuring time in microseconds)
Sum of squares of residuals: 0.0913501625354
RMS error = 11 percent

Test List-10: Delete first: del L[0]
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 0.512962 microseconds
n =   2000 : 0.964199 microseconds
n =   4000 : 2.720190 microseconds
n =   8000 : 8.045631 microseconds
n =  16000 : 14.752452 microseconds
n =  32000 : 28.745039 microseconds
n =  64000 : 61.825779 microseconds
Coefficients trained by the data:
 0.000659482*n
(measuring time in microseconds)
Sum of squares of residuals: 0.588843000776
RMS error = 29 percent

Test List-11: Reverse: L.reverse()
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 0.598101 microseconds
n =   2000 : 1.006768 microseconds
n =   4000 : 2.626537 microseconds
n =   8000 : 6.572727 microseconds
n =  16000 : 13.275291 microseconds
n =  32000 : 26.148301 microseconds
n =  64000 : 53.605613 microseconds
Coefficients trained by the data:
 0.000671762*n
(measuring time in microseconds)
Sum of squares of residuals: 0.267923998546
RMS error = 20 percent

Test List-12: Sort: L.sort()
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n*lg(n)',)
run times:
n =   1000 : 26.350506 microseconds
n =   2000 : 52.592460 microseconds
n =   4000 : 103.524710 microseconds
n =   8000 : 210.963684 microseconds
n =  16000 : 439.121179 microseconds
n =  32000 : 901.653441 microseconds
n =  64000 : 2063.010488 microseconds
Coefficients trained by the data:
 0.00210708*n*lg(n)
(measuring time in microseconds)
Sum of squares of residuals: 0.0792508561449
RMS error = 11 percent

Test Dict-1: create an empty dictionary: x = dict()
Spec_string:  1<=n<=1 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =      1 : 0.285215 microseconds
Coefficients trained by the data:
 0.285215*1
(measuring time in microseconds)
Sum of squares of residuals: 0.0
RMS error = 0 percent

Test Dict-2: dictionary lookup: x = d[1]
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =   1000 : 0.058746 microseconds
n =   2000 : 0.057043 microseconds
n =   4000 : 0.057043 microseconds
n =   8000 : 0.058320 microseconds
n =  16000 : 0.062577 microseconds
n =  32000 : 0.064706 microseconds
n =  64000 : 0.065557 microseconds
Coefficients trained by the data:
 0.0602079*1
(measuring time in microseconds)
Sum of squares of residuals: 0.0207461315763
RMS error = 5.4 percent

Test Dict-3: dictionary copy: d.copy()
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n',)
run times:
n =   1000 : 35.846905 microseconds
n =   2000 : 79.487004 microseconds
n =   4000 : 144.845624 microseconds
n =   8000 : 325.190786 microseconds
n =  16000 : 861.557251 microseconds
n =  32000 : 3326.593876 microseconds
n =  64000 : 6277.042154 microseconds
Coefficients trained by the data:
 0.0432647*n
(measuring time in microseconds)
Sum of squares of residuals: 0.784562108489
RMS error = 33 percent

Test Dict-4: dictionary list items: d.items()
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('n*lg(n)',)
run times:
n =   1000 : 54.594502 microseconds
n =   2000 : 114.907788 microseconds
n =   4000 : 284.570991 microseconds
n =   8000 : 698.429740 microseconds
n =  16000 : 1468.052246 microseconds
n =  32000 : 4672.911467 microseconds
n =  64000 : 12434.755253 microseconds
Coefficients trained by the data:
 0.00639787*n*lg(n)
(measuring time in microseconds)
Sum of squares of residuals: 0.429507410447
RMS error = 25 percent

Test Set-1: create an empty set: S = set()
Spec_string:  1<=n<=10 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =      1 : 0.176238 microseconds
n =      2 : 0.170278 microseconds
n =      4 : 0.170278 microseconds
n =      8 : 0.171981 microseconds
Coefficients trained by the data:
 0.172126*1
(measuring time in microseconds)
Sum of squares of residuals: 0.000780597679062
RMS error = 1.4 percent

Test Set-2: adding to a set of length n: S.add(0)
Spec_string:  10000<=n<=1000000 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =  10000 : 0.159636 microseconds
n =  20000 : 0.159636 microseconds
n =  40000 : 0.168149 microseconds
n =  80000 : 0.185177 microseconds
n = 160000 : 0.212847 microseconds
n = 320000 : 0.221361 microseconds
n = 640000 : 0.225618 microseconds
Coefficients trained by the data:
 0.18292*1
(measuring time in microseconds)
Sum of squares of residuals: 0.13615770034
RMS error = 14 percent

Test Set-3: pop: S.pop()
Spec_string:  1000<=n<=100000 by factors of 2
var_list ['n']
Function list: ('1',)
run times:
n =   1000 : 0.131965 microseconds
n =   2000 : 0.121323 microseconds
n =   4000 : 0.125580 microseconds
n =   8000 : 0.127708 microseconds
n =  16000 : 0.125580 microseconds
n =  32000 : 0.155379 microseconds
n =  64000 : 0.168149 microseconds
Coefficients trained by the data:
 0.133133*1
(measuring time in microseconds)
Sum of squares of residuals: 0.0824572406871
RMS error = 11 percent

Test Set-4: intersect: S & S2
Spec_string:  1000<=n<=100000;1000<=m<=100000;min(n,m)<=k<=min(n,m) by factors of 2
var_list ['n', 'm', 'k']
Function list: ('k',)
run times:
n =   1000 m =   1000 k =   1000 : 72.810833 microseconds
n =   1000 m =   2000 k =   1000 : 71.578446 microseconds
n =   1000 m =   4000 k =   1000 : 70.375859 microseconds
n =   1000 m =   8000 k =   1000 : 76.976256 microseconds
n =   1000 m =  16000 k =   1000 : 73.457889 microseconds
n =   1000 m =  32000 k =   1000 : 78.219285 microseconds
n =   1000 m =  64000 k =   1000 : 73.898483 microseconds
n =   2000 m =   1000 k =   1000 : 71.416682 microseconds
n =   2000 m =   2000 k =   2000 : 176.507949 microseconds
n =   2000 m =   4000 k =   2000 : 172.091366 microseconds
n =   2000 m =   8000 k =   2000 : 168.428263 microseconds
n =   2000 m =  16000 k =   2000 : 167.046883 microseconds
n =   2000 m =  32000 k =   2000 : 162.451508 microseconds
n =   2000 m =  64000 k =   2000 : 169.149815 microseconds
n =   4000 m =   1000 k =   1000 : 70.433327 microseconds
n =   4000 m =   2000 k =   2000 : 161.529879 microseconds
n =   4000 m =   4000 k =   4000 : 306.242686 microseconds
n =   4000 m =   8000 k =   4000 : 298.912222 microseconds
n =   4000 m =  16000 k =   4000 : 290.013073 microseconds
n =   4000 m =  32000 k =   4000 : 302.824357 microseconds
n =   4000 m =  64000 k =   4000 : 296.658168 microseconds
n =   8000 m =   1000 k =   1000 : 68.766732 microseconds
n =   8000 m =   2000 k =   2000 : 163.192217 microseconds
n =   8000 m =   4000 k =   4000 : 294.544594 microseconds
n =   8000 m =   8000 k =   8000 : 826.477874 microseconds
n =   8000 m =  16000 k =   8000 : 831.922510 microseconds
n =   8000 m =  32000 k =   8000 : 821.301426 microseconds
n =   8000 m =  64000 k =   8000 : 823.925834 microseconds
n =  16000 m =   1000 k =   1000 : 70.841994 microseconds
n =  16000 m =   2000 k =   2000 : 161.404299 microseconds
n =  16000 m =   4000 k =   4000 : 299.308118 microseconds
n =  16000 m =   8000 k =   8000 : 807.262012 microseconds
n =  16000 m =  16000 k =  16000 : 1481.249635 microseconds
n =  16000 m =  32000 k =  16000 : 1514.504911 microseconds
n =  16000 m =  64000 k =  16000 : 1526.196617 microseconds
n =  32000 m =   1000 k =   1000 : 71.293231 microseconds
n =  32000 m =   2000 k =   2000 : 163.213502 microseconds
n =  32000 m =   4000 k =   4000 : 297.332895 microseconds
n =  32000 m =   8000 k =   8000 : 820.950227 microseconds
n =  32000 m =  16000 k =  16000 : 1462.261520 microseconds
n =  32000 m =  32000 k =  32000 : 5214.524620 microseconds
n =  32000 m =  64000 k =  32000 : 5250.800200 microseconds
n =  64000 m =   1000 k =   1000 : 71.103797 microseconds
n =  64000 m =   2000 k =   2000 : 164.120232 microseconds
n =  64000 m =   4000 k =   4000 : 301.651568 microseconds
n =  64000 m =   8000 k =   8000 : 800.423226 microseconds
n =  64000 m =  16000 k =  16000 : 1486.666601 microseconds
n =  64000 m =  32000 k =  32000 : 5229.106794 microseconds
n =  64000 m =  64000 k =  64000 : 8392.014647 microseconds
Coefficients trained by the data:
 0.0816423*k
(measuring time in microseconds)
Sum of squares of residuals: 1.59032817728
RMS error = 18 percent

Test Set-5: union: S | S2
Spec_string:  1000<=n<=100000;1000<=m<=100000 by factors of 2
var_list ['n', 'm']
Function list: ('n', 'm')
run times:
n =   1000 m =   1000 : 60.274122 microseconds
n =   1000 m =   2000 : 102.741432 microseconds
n =   1000 m =   4000 : 161.551164 microseconds
n =   1000 m =   8000 : 443.512220 microseconds
n =   1000 m =  16000 : 1264.881757 microseconds
n =   1000 m =  32000 : 3040.648316 microseconds
n =   1000 m =  64000 : 4432.327516 microseconds
n =   2000 m =   1000 : 105.953299 microseconds
n =   2000 m =   2000 : 136.147828 microseconds
n =   2000 m =   4000 : 185.245334 microseconds
n =   2000 m =   8000 : 480.962717 microseconds
n =   2000 m =  16000 : 1285.491769 microseconds
n =   2000 m =  32000 : 3112.243790 microseconds
n =   2000 m =  64000 : 6230.570759 microseconds
n =   4000 m =   1000 : 122.272308 microseconds
n =   4000 m =   2000 : 210.327270 microseconds
n =   4000 m =   4000 : 234.570587 microseconds
n =   4000 m =   8000 : 567.538390 microseconds
n =   4000 m =  16000 : 1379.676736 microseconds
n =   4000 m =  32000 : 3186.668006 microseconds
n =   4000 m =  64000 : 6333.103600 microseconds
n =   8000 m =   1000 : 280.254021 microseconds
n =   8000 m =   2000 : 308.300920 microseconds
n =   8000 m =   4000 : 641.221897 microseconds
n =   8000 m =   8000 : 806.895915 microseconds
n =   8000 m =  16000 : 1569.270542 microseconds
n =   8000 m =  32000 : 3673.418044 microseconds
n =   8000 m =  64000 : 6834.118669 microseconds
n =  16000 m =   1000 : 672.942543 microseconds
n =  16000 m =   2000 : 730.798718 microseconds
n =  16000 m =   4000 : 781.220135 microseconds
n =  16000 m =   8000 : 2011.554633 microseconds
n =  16000 m =  16000 : 2175.960080 microseconds
n =  16000 m =  32000 : 4189.949687 microseconds
n =  16000 m =  64000 : 7246.069879 microseconds
n =  32000 m =   1000 : 2242.223727 microseconds
n =  32000 m =   2000 : 2281.981490 microseconds
n =  32000 m =   4000 : 2338.347734 microseconds
n =  32000 m =   8000 : 2665.419665 microseconds
n =  32000 m =  16000 : 4917.230038 microseconds
n =  32000 m =  32000 : 6303.292196 microseconds
n =  32000 m =  64000 : 9290.537103 microseconds
n =  64000 m =   1000 : 4403.418584 microseconds
n =  64000 m =   2000 : 4462.507146 microseconds
n =  64000 m =   4000 : 4599.208378 microseconds
n =  64000 m =   8000 : 4917.532281 microseconds
n =  64000 m =  16000 : 5254.552699 microseconds
n =  64000 m =  32000 : 10544.372081 microseconds
n =  64000 m =  64000 : 12043.534952 microseconds
Coefficients trained by the data:
 0.0371488*n
+0.054977*m
(measuring time in microseconds)
Sum of squares of residuals: 7.75347315372
RMS error = 40 percent
[Finished in 104.3s]